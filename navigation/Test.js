import { StyleSheet, Text, TouchableOpacity, View, Alert } from 'react-native'
import React, { useState , useEffect } from 'react'
import { useIsFocused } from '@react-navigation/native';
import Svg, { Path } from 'react-native-svg';
import {widthPercentageToDP as wp, heightPercentageToDP as hp} from 'react-native-responsive-screen';

const Test = ({ navigation }) => {
  const isFocused = useIsFocused(); // Get the screen focus state
  const [svgColors, setSvgColors] = useState({
    home: isFocused ? 'black' : 'white', // Set initial color based on focus state
    history: isFocused ? 'black' : 'white',
    service: isFocused ? 'black' : 'white',
    chat: isFocused ? 'black' : 'white',
    setting: isFocused ? 'black' : 'white',
  });

  const handleSVGPress = (svg) => {
    setSvgColors((prevColors) => ({
      ...prevColors,
      home: svg === 'home' ? 'black' : 'white',
      history: svg === 'history' ? 'black' : 'white',
      service: svg === 'service' ? 'black' : 'white',
      chat: svg === 'chat' ? 'black' : 'white',
      setting: svg === 'setting' ? 'black' : 'white',
    }));

    // Navigate to corresponding screen based on the SVG clicked
    switch (svg) {
      case 'home':
        navigation.navigate('Home');
        break;
      case 'history':
        navigation.navigate('History');
        break;
      case 'service':
        navigation.navigate('Category');
        break;
      case 'chat':
        navigation.navigate('Chat');
        break;
      case 'setting':
        navigation.navigate('Setting');
        break;
      default:
        break;
    }
  };

  // Update SVG colors when screen focus changes
  useEffect(() => {
    setSvgColors({
      home: isFocused ? 'black' : 'white',
      history: isFocused ? 'black' : 'white',
      service: isFocused ? 'black' : 'white',
      chat: isFocused ? 'black' : 'white',
      setting: isFocused ? 'black' : 'white',
    });
  }, [isFocused]);

  return (
    <View style={styles.container1}>
      <View  style={styles.BottomNav}>
      <TouchableOpacity
              activeOpacity={0.9}
              onPress={() => handleSVGPress('home')}
             >
        <View style={styles.homeicon}>
          <Svg width="35" height="37" viewBox="0 0 35 37" fill="none" xmlns="http://www.w3.org/2000/svg">
            <Path d="M19.4444 33.0402H31.1111V15.4974L17.5 4.91185L3.88889 15.4974V33.0402H15.5556V21.3735H19.4444V33.0402ZM35 34.9846C35 35.5003 34.7951 35.9949 34.4305 36.3596C34.0658 36.7242 33.5713 36.9291 33.0556 36.9291H1.94444C1.42875 36.9291 0.934169 36.7242 0.569515 36.3596C0.204861 35.9949 4.68048e-07 35.5003 4.68048e-07 34.9846V14.5485C-0.000205107 14.2522 0.0673112 13.9598 0.197392 13.6935C0.327473 13.4273 0.516678 13.1943 0.750556 13.0124L16.3061 0.914077C16.6474 0.648554 17.0676 0.504395 17.5 0.504395C17.9324 0.504395 18.3526 0.648554 18.6939 0.914077L34.2494 13.0124C34.4833 13.1943 34.6725 13.4273 34.8026 13.6935C34.9327 13.9598 35.0002 14.2522 35 14.5485V34.9846Z"
              fill={svgColors.home} />
          </Svg>
        </View>
        </TouchableOpacity>
        <TouchableOpacity
              activeOpacity={0.9}
              onPress={() => handleSVGPress('history')}
             >
        <View style={styles.historyicon}>
          <Svg width="35" height="36" viewBox="0 0 35 36" fill="none" xmlns="http://www.w3.org/2000/svg">
            <Path d="M17.5 0.504395C27.1652 0.504395 35 8.33914 35 18.0044C35 27.6696 27.1652 35.5044 17.5 35.5044C7.83475 35.5044 0 27.6696 0 18.0044H3.5C3.5 25.7359 9.7685 32.0044 17.5 32.0044C25.2315 32.0044 31.5 25.7359 31.5 18.0044C31.5 10.2729 25.2315 4.00439 17.5 4.00439C13.188 4.00439 9.331 5.95389 6.76375 9.01814L10.5 12.7544H0V2.25439L4.28225 6.53489C7.49 2.8424 12.222 0.504395 17.5 0.504395ZM19.25 9.25439V17.2781L24.9253 22.9534L22.449 25.4296L15.75 18.7271V9.25439H19.25Z"
              fill={svgColors.history} />
          </Svg>
        </View>
        </TouchableOpacity>
        <TouchableOpacity
              activeOpacity={0.9}
              onPress={() => handleSVGPress('service')}
             >
        <View style={styles.serviceicon}>
          <Svg width="35" height="33" viewBox="0 0 35 33" fill="none" xmlns="http://www.w3.org/2000/svg">
            <Path d="M31.815 18.3876V29.1379H33.4057V32.3194H1.59075V29.1379H3.1815V18.3876C2.20219 17.7339 1.3994 16.8486 0.844401 15.8102C0.2894 14.7718 -0.000648601 13.6124 1.08905e-06 12.435C1.08905e-06 11.1195 0.356329 9.85163 1.00694 8.77151L5.32105 1.29977C5.46067 1.05795 5.66147 0.857141 5.90329 0.717524C6.14511 0.577908 6.41941 0.504402 6.69864 0.504395H28.2994C28.5786 0.504402 28.8529 0.577908 29.0948 0.717524C29.3366 0.857141 29.5374 1.05795 29.677 1.29977L33.9752 8.74765C34.9242 10.3239 35.2292 12.2052 34.8269 14.0005C34.4246 15.7958 33.3458 17.3671 31.815 18.3876ZM28.6335 19.5488C27.5397 19.6715 26.4324 19.5401 25.3977 19.1649C24.3631 18.7897 23.429 18.1807 22.6682 17.3854C22.0004 18.0839 21.198 18.6397 20.3094 19.0195C19.4209 19.3993 18.4645 19.595 17.4982 19.595C16.5321 19.5954 15.576 19.4002 14.6874 19.021C13.7989 18.6418 12.9963 18.0865 12.3283 17.3886C11.5673 18.1836 10.6332 18.7923 9.5985 19.1672C8.56384 19.5422 7.45661 19.6733 6.36299 19.5504V29.1379H28.6335V19.5488ZM7.61809 3.68589L3.7478 10.3877C3.37171 11.3169 3.36043 12.3539 3.7162 13.2911C4.07197 14.2283 4.76855 14.9966 5.66653 15.4421C6.56451 15.8877 7.59764 15.9777 8.55915 15.6942C9.52065 15.4106 10.3396 14.7744 10.8521 13.9128C11.385 12.5814 13.27 12.5814 13.8045 13.9128C14.0993 14.6516 14.6088 15.285 15.2672 15.7312C15.9257 16.1774 16.7028 16.4159 17.4982 16.4159C18.2936 16.4159 19.0708 16.1774 19.7292 15.7312C20.3877 15.285 20.8972 14.6516 21.1919 13.9128C21.7248 12.5814 23.6099 12.5814 24.1444 13.9128C24.3508 14.421 24.6601 14.8809 25.0529 15.2638C25.4457 15.6466 25.9134 15.9441 26.4267 16.1375C26.9399 16.3309 27.4877 16.416 28.0354 16.3875C28.5832 16.359 29.1191 16.2175 29.6096 15.9719C30.1 15.7263 30.5343 15.3819 30.8852 14.9604C31.2362 14.5388 31.4961 14.0492 31.6487 13.5224C31.8013 12.9956 31.8432 12.4428 31.7719 11.899C31.7006 11.3552 31.5176 10.832 31.2343 10.3623L27.3768 3.68589H7.61809Z"
              fill={svgColors.service} />
          </Svg>
        </View>
        </TouchableOpacity>
        <TouchableOpacity
              activeOpacity={0.9}
              onPress={() => handleSVGPress('chat')}
             >
        <View style={styles.chaticon}>
          <Svg width="35" height="35" viewBox="0 0 35 35" fill="none">
            <Path
              d="M14 0.504395H21C24.713 0.504395 28.274 1.97939 30.8995 4.6049C33.525 7.23041 35 10.7914 35 14.5044C35 18.2174 33.525 21.7784 30.8995 24.4039C28.274 27.0294 24.713 28.5044 21 28.5044V34.6294C12.25 31.1294 0 25.8794 0 14.5044C0 10.7914 1.475 7.23041 4.10051 4.6049C6.72601 1.97939 10.287 0.504395 14 0.504395ZM17.5 25.0044H21C22.3789 25.0044 23.7443 24.7328 25.0182 24.2051C26.2921 23.6775 27.4496 22.904 28.4246 21.929C29.3996 20.954 30.1731 19.7965 30.7007 18.5226C31.2284 17.2487 31.5 15.8833 31.5 14.5044C31.5 13.1255 31.2284 11.7601 30.7007 10.4862C30.1731 9.2123 29.3996 8.05479 28.4246 7.07977C27.4496 6.10476 26.2921 5.33133 25.0182 4.80366C23.7443 4.27599 22.3789 4.00439 21 4.00439H14C11.2152 4.00439 8.54451 5.11064 6.57538 7.07977C4.60625 9.04891 3.5 11.7196 3.5 14.5044C3.5 20.8219 7.8085 24.9449 17.5 29.3444V25.0044Z"
              fill={svgColors.chat}
            />
          </Svg>
        </View>
        </TouchableOpacity>
        <TouchableOpacity
             
              onPress={() => handleSVGPress('setting')}
             >
        <View style={styles.settingicon}>
          <Svg width="35" height="37" viewBox="0 0 35 37" fill="none" xmlns="http://www.w3.org/2000/svg">
            <Path d="M1.77578 27.7436C1.00822 26.4162 0.411562 24.9972 0 23.5202C0.895713 23.0646 1.64795 22.3701 2.17348 21.5136C2.69902 20.6571 2.97737 19.6718 2.97775 18.6669C2.97812 17.662 2.70051 16.6766 2.17561 15.8197C1.65072 14.9627 0.899003 14.2677 0.00363163 13.8115C0.824406 10.8436 2.38719 8.13359 4.54477 5.93665C5.38744 6.4845 6.36525 6.78852 7.37001 6.81506C8.37476 6.84161 9.36726 6.58964 10.2377 6.08705C11.1081 5.58446 11.8225 4.85084 12.3018 3.96738C12.7811 3.08393 13.0066 2.08508 12.9534 1.08139C15.935 0.310834 19.0638 0.312084 22.0448 1.08502C21.992 2.08869 22.218 3.08739 22.6977 3.97059C23.1773 4.8538 23.892 5.58708 24.7626 6.08928C25.6332 6.59149 26.6258 6.84304 27.6304 6.8161C28.6351 6.78916 29.6128 6.48478 30.4552 5.93665C31.5065 7.00793 32.4398 8.22628 33.2242 9.58627C34.0104 10.9462 34.5987 12.3643 35 13.8097C34.1043 14.2652 33.3521 14.9597 32.8265 15.8162C32.301 16.6728 32.0226 17.658 32.0223 18.6629C32.0219 19.6678 32.2995 20.6532 32.8244 21.5102C33.3493 22.3671 34.101 23.0621 34.9964 23.5184C34.1756 26.4862 32.6128 29.1962 30.4552 31.3932C29.6126 30.8453 28.6347 30.5413 27.63 30.5148C26.6252 30.4882 25.6327 30.7402 24.7623 31.2428C23.8919 31.7454 23.1775 32.479 22.6982 33.3624C22.2189 34.2459 21.9934 35.2447 22.0466 36.2484C19.065 37.019 15.9362 37.0177 12.9552 36.2448C13.008 35.2411 12.782 34.2424 12.3023 33.3592C11.8227 32.476 11.108 31.7427 10.2374 31.2405C9.3668 30.7383 8.37424 30.4868 7.36955 30.5137C6.36485 30.5407 5.3872 30.845 4.54477 31.3932C3.47166 30.2982 2.54129 29.0719 1.77578 27.7436ZM12.0528 28.0994C13.9877 29.2154 15.4425 31.0065 16.1382 33.129C17.0443 33.2143 17.9539 33.2162 18.86 33.1308C19.5561 31.008 21.0116 29.2169 22.9472 28.1013C24.8813 26.9822 27.1606 26.6169 29.3476 27.0754C29.8742 26.3346 30.3281 25.5447 30.7058 24.7186C29.2159 23.0543 28.3928 20.8986 28.3944 18.6649C28.3944 16.3771 29.2478 14.24 30.7058 12.6113C30.3255 11.7854 29.8696 10.9964 29.344 10.2545C27.1584 10.7126 24.8806 10.3479 22.9472 9.23038C21.0123 8.11438 19.5575 6.32337 18.8618 4.20081C17.9557 4.11547 17.0461 4.11366 16.14 4.199C15.4439 6.32185 13.9884 8.11291 12.0528 9.22857C10.1187 10.3476 7.83937 10.713 5.65237 10.2545C5.12683 10.9958 4.67211 11.7849 4.2942 12.6113C5.78413 14.2755 6.60723 16.4312 6.60562 18.6649C6.60562 20.9527 5.75223 23.0898 4.2942 24.7186C4.67454 25.5444 5.13041 26.3334 5.656 27.0754C7.84162 26.6172 10.1194 26.9819 12.0528 28.0994ZM17.5 24.1121C16.0553 24.1121 14.6698 23.5382 13.6483 22.5167C12.6267 21.4951 12.0528 20.1096 12.0528 18.6649C12.0528 17.2202 12.6267 15.8347 13.6483 14.8132C14.6698 13.7916 16.0553 13.2177 17.5 13.2177C18.9447 13.2177 20.3302 13.7916 21.3517 14.8132C22.3733 15.8347 22.9472 17.2202 22.9472 18.6649C22.9472 20.1096 22.3733 21.4951 21.3517 22.5167C20.3302 23.5382 18.9447 24.1121 17.5 24.1121ZM17.5 20.4806C17.9816 20.4806 18.4434 20.2893 18.7839 19.9488C19.1244 19.6083 19.3157 19.1465 19.3157 18.6649C19.3157 18.1833 19.1244 17.7215 18.7839 17.381C18.4434 17.0405 17.9816 16.8492 17.5 16.8492C17.0184 16.8492 16.5566 17.0405 16.2161 17.381C15.8756 17.7215 15.6843 18.1833 15.6843 18.6649C15.6843 19.1465 15.8756 19.6083 16.2161 19.9488C16.5566 20.2893 17.0184 20.4806 17.5 20.4806Z"
              fill={svgColors.setting} />
          </Svg>
        </View>
        </TouchableOpacity>
      </View>
    </View>
  )
}

export default Test

const styles = StyleSheet.create({
  para: {
    position: 'relative',
  },
  para11: {
    position: 'absolute',

  },
  btn: {
    top: 55,
    left: 2,
    backgroundColor: "black",

  },
  container1:{
   position:'relative',
   top:-11,
   Zindex:9999,
  },
  text: {
    color: "white",
    textAlign: "center",
  },
  BottomNav:{
    backgroundColor: "#323248",
    display:'flex',
    flexDirection:'row',
    justifyContent:'space-between',
    padding: hp('2.3%'),
    top:hp('1.5%')
  },
})